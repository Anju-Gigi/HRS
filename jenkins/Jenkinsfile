pipeline {
    agent any

    environment {
        AWS_REGION = 'eu-north-1'  
        ECR_REPO_URI = 'your-account-id.dkr.ecr.us-east-1.amazonaws.com/your-ecr-repository'
        ECS_CLUSTER = 'my-cluster'
        ECS_SERVICE = 'my-service'
        DOCKER_IMAGE = "627562689753.dkr.ecr.eu-north-1.amazonaws.com/java:latest"
        AWS_ACCESS_KEY_ID = credentials('aws-access-key-id')
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build WAR') {
            steps {
                script {
                    sh 'mvn clean package'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh """
                    docker build -t ${DOCKER_IMAGE} .
                    """
                }
            }
        }

        stage('Login to Amazon ECR') {
            steps {
                script {
                    sh """
                    aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_REPO_URI}
                    """
                }
            }
        }

        stage('Push Docker Image to ECR') {
            steps {
                script {
                    sh """
                    docker push ${DOCKER_IMAGE}
                    """
                }
            }
        }

        stage('Deploy to ECS') {
            steps {
                script {
                    sh """
                    aws ecs update-service --cluster ${ECS_CLUSTER} --service ${ECS_SERVICE} --force-new-deployment
                    """
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
